import os
import sys
import requests
import subprocess

GITHUB_API = 'https://api.github.com'

def input_token():
    return input("Masukkan Personal Access Token GitHub: ").strip()

def get_repositories(token):
    headers = {'Authorization': f'token {token}'}
    repos = []
    page = 1
    while True:
        resp = requests.get(f"{GITHUB_API}/user/repos?per_page=100&page={page}", headers=headers)
        if resp.status_code != 200:
            print("Gagal mengambil repository.")
            sys.exit(1)
        data = resp.json()
        if not data:
            break
        repos.extend(data)
        page += 1
    return repos

def select_repository(repos):
    print("\nRepository Anda:")
    print("0. [Buat repository baru]")
    for idx, repo in enumerate(repos, 1):
        print(f"{idx}. {repo['full_name']}")
    pilihan = input("Pilih repository (masukkan angka): ")
    try:
        idx = int(pilihan)
        if idx == 0:
            return None
        elif 1 <= idx <= len(repos):
            return repos[idx-1]['full_name']
    except ValueError:
        pass
    print("Pilihan tidak valid.")
    sys.exit(1)

def create_repository(token):
    nama = input("Masukkan nama repository baru: ").strip()
    desc = input("Deskripsi (opsional): ")
    priv = input("Private? (y/n): ").lower().startswith('y')
    data = {
        "name": nama,
        "description": desc,
        "private": priv
    }
    headers = {'Authorization': f'token {token}'}
    resp = requests.post(f"{GITHUB_API}/user/repos", json=data, headers=headers)
    if resp.status_code in [201, 202]:
        return resp.json()['full_name']
    print("Gagal membuat repository.")
    sys.exit(1)

def filter_files():
    files = []
    for f in os.listdir('.'):
        if os.path.isfile(f) and f != 'app.py':
            files.append(f)
    return files

def git_upload(repo_fullname, token):
    repo_url = f'https://{token}@github.com/{repo_fullname}.git'
    if not os.path.exists('.git'):
        subprocess.run(['git', 'init'])
    subprocess.run(['git', 'checkout', '-B', 'main'])
    subprocess.run(['git', 'add', '.'])
    subprocess.run(['git', 'reset', 'app.py'])
    subprocess.run(['git', 'commit', '-m', 'Upload via app.py'])
    subprocess.run(['git', 'remote', 'remove', 'origin'], stderr=subprocess.DEVNULL)
    subprocess.run(['git', 'remote', 'add', 'origin', repo_url])
    subprocess.run(['git', 'push', '-u', 'origin', 'main'])

def main():
    print("=== Upload Project ke GitHub ===")
    token = input_token()
    repos = get_repositories(token)
    repo_fullname = select_repository(repos)
    if not repo_fullname:
        repo_fullname = create_repository(token)
    print(f"Mengupload ke repository: {repo_fullname}")
    # Filter file selain app.py
    files = filter_files()
    print('File akan diupload:', ', '.join(files))
    git_upload(repo_fullname, token)
    print("Upload selesai.")

if __name__ == '__main__':
    main()
